<keyword , #include>
<file , "lex.h">
<separator , 换行符>
<keyword , #include>
<file , "token.h">
<separator , 换行符>
<separator , 换行符>
<keyword , int>
<identifier , main>
<separator , (>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<identifier , FILE>
<operator , *>
<identifier , inputfile>
<separator , ,>
<operator , *>
<identifier , outputfile>
<separator , ;>
<separator , 换行符>
<identifier , inputfile>
<operator , =>
<identifier , fopen>
<separator , (>
<string , "input2.txt">
<separator , ,>
<string , "r">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , inputfile>
<operator , ==>
<identifier , NULL>
<separator , )>
<separator , {>
<separator , 换行符>
<identifier , printf>
<separator , (>
<string , "无法打开 input.txt 文件。\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<keyword , return>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<identifier , outputfile>
<operator , =>
<identifier , fopen>
<separator , (>
<string , "output2.txt">
<separator , ,>
<string , "w">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , outputfile>
<operator , ==>
<identifier , NULL>
<separator , )>
<separator , {>
<separator , 换行符>
<identifier , printf>
<separator , (>
<string , "无法打开 output.txt 文件。\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<identifier , fclose>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<keyword , return>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , initbuffer>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , forward>
<operator , =>
<operator , &>
<identifier , buffer1>
<separator , [>
<number , 0>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , lexemebegin>
<operator , =>
<operator , &>
<identifier , buffer1>
<separator , [>
<number , 0>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<keyword , char>
<operator , *>
<identifier , gettoken>
<separator , ;>
<separator , 换行符>
<keyword , while>
<separator , (>
<identifier , endofthefile>
<operator , ==>
<identifier , false>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , gettoken>
<operator , =>
<identifier , lex>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "gettoken = %s\n">
<separator , ,>
<identifier , gettoken>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , gettoken>
<operator , !=>
<identifier , NULL>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , gettoken>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , putfileinfor>
<separator , (>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fclose>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fclose>
<separator , (>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<keyword , for>
<separator , (>
<keyword , int>
<identifier , i>
<operator , =>
<number , 0>
<separator , ;>
<identifier , i>
<operator , <>
<identifier , tablesize>
<separator , ;>
<identifier , i>
<operator , ++>
<separator , )>
<separator , {>
<separator , 换行符>
<identifier , free>
<separator , (>
<identifier , table>
<separator , [>
<identifier , i>
<separator , ]>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<identifier , free>
<separator , (>
<identifier , table>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , return>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , void>
<identifier , putfileinfor>
<separator , (>
<identifier , FILE>
<operator , *>
<identifier , outputfile>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<keyword , static>
<keyword , char>
<identifier , fileinfor>
<separator , [>
<number , 50>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "/*********************************/\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the line: %d\n">
<separator , ,>
<identifier , linenumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the identifier: %d\n">
<separator , ,>
<identifier , identifiernumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the keyword: %d\n">
<separator , ,>
<identifier , keywordnumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the number: %d\n">
<separator , ,>
<identifier , numbernumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the operator: %d\n">
<separator , ,>
<identifier , operatornumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the character: %d\n">
<separator , ,>
<identifier , characternumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the string: %d\n">
<separator , ,>
<identifier , stringnumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the file: %d\n">
<separator , ,>
<identifier , filenumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the separator: %d\n">
<separator , ,>
<identifier , separatornumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The number of the error: %d\n">
<separator , ,>
<identifier , errornumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , totalnumber>
<operator , =>
<identifier , identifiernumber>
<operator , +>
<identifier , keywordnumber>
<operator , +>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , numbernumber>
<operator , +>
<identifier , operatornumber>
<operator , +>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , characternumber>
<operator , +>
<identifier , stringnumber>
<operator , +>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , filenumber>
<operator , +>
<identifier , separatornumber>
<operator , +>
<identifier , errornumber>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "The total number: %d\n">
<separator , ,>
<identifier , totalnumber>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<string , "/*********************************/\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , fputs>
<separator , (>
<identifier , fileinfor>
<separator , ,>
<identifier , outputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<identifier , bool>
<identifier , letter>
<separator , (>
<keyword , char>
<identifier , C>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , >=>
<character , 'a'>
<operator , &&>
<identifier , C>
<operator , <=>
<character , 'z'>
<separator , )>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , true>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , C>
<operator , >=>
<character , 'A'>
<operator , &&>
<identifier , C>
<operator , <=>
<character , 'Z'>
<separator , )>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , true>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , return>
<identifier , false>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<identifier , bool>
<identifier , digit>
<separator , (>
<keyword , char>
<identifier , C>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , >=>
<character , '0'>
<operator , &&>
<identifier , C>
<operator , <=>
<character , '9'>
<separator , )>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , true>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , return>
<identifier , false>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , int>
<identifier , reserve>
<separator , (>
<keyword , char>
<identifier , token>
<separator , [>
<separator , ]>
<separator , )>
<separator , {>
<separator , 换行符>
<keyword , int>
<identifier , i>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<keyword , while>
<separator , (>
<identifier , keywords>
<separator , [>
<identifier , i>
<separator , ]>
<operator , !=>
<identifier , NULL>
<separator , )>
<separator , {>
<separator , 换行符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , token>
<separator , ,>
<identifier , keywords>
<separator , [>
<identifier , i>
<separator , ]>
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , 换行符>
<keyword , return>
<identifier , i>
<separator , ;>
<separator , 换行符>
<identifier , i>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<keyword , return>
<operator , ->
<number , 1>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<separator , 换行符>
<keyword , char>
<operator , *>
<identifier , table_insert>
<separator , (>
<keyword , char>
<identifier , token>
<separator , [>
<separator , ]>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , int>
<identifier , i>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<keyword , while>
<separator , (>
<identifier , table>
<operator , !=>
<identifier , NULL>
<operator , &&>
<identifier , i>
<operator , <>
<identifier , tablesize>
<separator , )>
<separator , {>
<separator , 换行符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , token>
<separator , ,>
<identifier , table>
<separator , [>
<identifier , i>
<separator , ]>
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , 换行符>
<keyword , return>
<identifier , table>
<separator , [>
<identifier , i>
<separator , ]>
<separator , ;>
<separator , 换行符>
<identifier , i>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , tablesize>
<operator , +=>
<number , 1>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , table>
<operator , =>
<identifier , realloc>
<separator , (>
<identifier , table>
<separator , ,>
<identifier , tablesize>
<operator , *>
<keyword , sizeof>
<separator , (>
<keyword , char>
<operator , *>
<separator , )>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , table>
<separator , [>
<identifier , tablesize>
<operator , ->
<number , 1>
<separator , ]>
<operator , =>
<identifier , malloc>
<separator , (>
<identifier , strlen>
<separator , (>
<identifier , token>
<separator , )>
<operator , +>
<number , 1>
<separator , )>
<separator , ;>
<separator , 换行符>
<identifier , strcpy>
<separator , (>
<identifier , table>
<separator , [>
<identifier , tablesize>
<operator , ->
<number , 1>
<separator , ]>
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<keyword , return>
<identifier , table>
<separator , [>
<identifier , tablesize>
<operator , ->
<number , 1>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , char>
<operator , *>
<identifier , lex>
<separator , (>
<identifier , FILE>
<operator , *>
<identifier , inputfile>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<keyword , do>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , switch>
<separator , (>
<identifier , state>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 0>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 0\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , token>
<separator , [>
<number , 0>
<separator , ]>
<operator , =>
<character , '\0'>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , lexemebegin>
<operator , =>
<identifier , forward>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_nbc>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , letter>
<separator , (>
<identifier , C>
<separator , )>
<operator , ||>
<identifier , C>
<operator , ==>
<character , '_'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 1>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , digit>
<separator , (>
<identifier , C>
<separator , )>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 2>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , switch>
<separator , (>
<identifier , C>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '<'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 8>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '>'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 9>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '='>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 10>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '+'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 11>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '-'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 12>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '*'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 13>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '/'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 14>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '\''>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 18>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '"'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 21>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '#'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 22>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '\n'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , "换行符">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '\t'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , "制表符">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '\r'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , "回车符">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '('>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , "(">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , ')'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , ")">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , ';'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , ";">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '\\'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , "\\">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '{'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , "{">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '}'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , "}">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '['>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , "[">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , ']'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , "]">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , ','>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , ",">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '!'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 27>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , ':'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "separator">
<separator , ,>
<string , ":">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '|'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 28>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '&'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 29>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , default>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "error">
<separator , ,>
<string , "识别出了错误字符">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 1>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 1\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , letter>
<separator , (>
<identifier , C>
<separator , )>
<operator , ||>
<identifier , digit>
<separator , (>
<identifier , C>
<separator , )>
<operator , ||>
<identifier , C>
<operator , ==>
<character , '_'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 1>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , iskey>
<operator , =>
<identifier , reserve>
<separator , (>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , iskey>
<operator , !=>
<operator , ->
<number , 1>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , keywords>
<separator , [>
<identifier , iskey>
<separator , ]>
<operator , ==>
<string , "#include">
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 23>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , keywords>
<separator , [>
<identifier , iskey>
<separator , ]>
<operator , ==>
<string , "#define">
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 24>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "keyword">
<separator , ,>
<identifier , keywords>
<separator , [>
<identifier , iskey>
<separator , ]>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , char>
<operator , *>
<identifier , identry>
<operator , =>
<identifier , table_insert>
<separator , (>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "identifier">
<separator , ,>
<identifier , identry>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 2>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 2\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , digit>
<separator , (>
<identifier , C>
<separator , )>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 2>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , switch>
<separator , (>
<identifier , C>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '.'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 3>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , 'e'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , 'E'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 5>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , default>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 制表符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "number">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 3>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 3\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , digit>
<separator , (>
<identifier , C>
<separator , )>
<separator , )>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 4>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "error">
<separator , ,>
<string , "digits.需要更多digit">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 4>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 4">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , digit>
<separator , (>
<identifier , C>
<separator , )>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 4>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , switch>
<separator , (>
<identifier , C>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , 'e'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , 'E'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 5>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , default>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "number">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 5>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 5\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , digit>
<separator , (>
<identifier , C>
<separator , )>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 7>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , switch>
<separator , (>
<identifier , C>
<separator , )>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '+'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '-'>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 6>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , default>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "error">
<separator , ,>
<string , "digits e/E || digits.digits. e/E后需要digit | + | -">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 6>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , digit>
<separator , (>
<identifier , C>
<separator , )>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 7>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "error">
<separator , ,>
<string , "digits e/E +/- || digits.digits. e/E +/-后需要更多digit">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 7>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 7\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , digit>
<separator , (>
<identifier , C>
<separator , )>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 7>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "number">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 8>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 8\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , switch>
<separator , (>
<identifier , C>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<character , '='>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , default>
<separator , :>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 9>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 9\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '='>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 10>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 10\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '='>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 11>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 11\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '='>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '+'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 12>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 12\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '='>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '-'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 13>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 13\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '='>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 14>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 14\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '='>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '/'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 15>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '*'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 16>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 15>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 15\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\n'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , linenumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<string , "\0">
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , endofthefile>
<operator , ==>
<identifier , true>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<string , "\0">
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , !=>
<character , '\n'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 15>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 16>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 16\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\n'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , linenumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , while>
<separator , (>
<identifier , C>
<operator , !=>
<character , '*'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\n'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , linenumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '*'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 17>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 17>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 17\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\n'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , linenumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , while>
<separator , (>
<identifier , C>
<operator , ==>
<character , '*'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\n'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , linenumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , !=>
<character , '/'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 16>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '/'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<string , "\0">
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 18>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 18\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\\'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 20>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\n'>
<operator , ||>
<identifier , C>
<operator , ==>
<character , '\''>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\n'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , linenumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "error">
<separator , ,>
<string , "读取到了错误的字符">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 19>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 19>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 19\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\''>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "character">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "error">
<separator , ,>
<string , "读取到了错误的字符">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 20>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 20\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\''>
<operator , ||>
<identifier , C>
<operator , ==>
<character , 'n'>
<operator , ||>
<identifier , C>
<operator , ==>
<character , 'r'>
<operator , ||>
<identifier , C>
<operator , ==>
<character , 't'>
<operator , ||>
<identifier , C>
<operator , ==>
<character , '\"'>
<operator , ||>
<identifier , C>
<operator , ==>
<character , '\\'>
<operator , ||>
<identifier , C>
<operator , ==>
<character , '0'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 19>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "error">
<separator , ,>
<string , "读取到了错误的转义字符">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 21>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 21\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '"'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "string">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\\'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\"'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 21>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 21>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , endofthefile>
<operator , ==>
<identifier , false>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 21>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , endofthefile>
<operator , ==>
<identifier , true>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "error">
<separator , ,>
<string , "字符串需要匹配双引号">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<string , "\0">
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 22>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 22\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_nbc>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 1>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 23>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 23\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , token>
<separator , [>
<number , 0>
<separator , ]>
<operator , =>
<character , '\0'>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_nbc>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '<'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 25>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\"'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 26>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "error">
<separator , ,>
<string , "宏定义文件名称格式有误">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 24>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 24\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , token>
<separator , [>
<number , 0>
<separator , ]>
<operator , =>
<character , '\0'>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_nbc>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 1>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 25>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 25\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '>'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "file">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , C>
<operator , !=>
<character , '>'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 25>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 26>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 26\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '\"'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "file">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 26>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 27>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 27\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '='>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 28>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 28\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '|'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , case>
<number , 29>
<separator , :>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "state = 29\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<character , '&'>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , cat>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , retract>
<separator , (>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , state>
<operator , =>
<number , 0>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , gettuple>
<separator , (>
<string , "operator">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<keyword , while>
<separator , (>
<number , 1>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , char>
<operator , *>
<identifier , gettuple>
<separator , (>
<keyword , char>
<operator , *>
<identifier , tag>
<separator , ,>
<keyword , char>
<operator , *>
<identifier , attribute>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , tag>
<separator , ,>
<string , "identifier">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , identifiernumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , tag>
<separator , ,>
<string , "keyword">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , keywordnumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , tag>
<separator , ,>
<string , "number">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , numbernumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , tag>
<separator , ,>
<string , "operator">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , operatornumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , tag>
<separator , ,>
<string , "character">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , characternumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , tag>
<separator , ,>
<string , "string">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , stringnumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , tag>
<separator , ,>
<string , "file">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , filenumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , tag>
<separator , ,>
<string , "separator">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , separatornumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , attribute>
<separator , ,>
<string , "换行符">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , linenumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , strcmp>
<separator , (>
<identifier , tag>
<separator , ,>
<string , "error">
<separator , )>
<operator , ==>
<number , 0>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , errornumber>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , static>
<keyword , char>
<identifier , tuple>
<separator , [>
<number , 50>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , tuple>
<separator , ,>
<string , "%s in line: %d, %s\n">
<separator , ,>
<identifier , tag>
<separator , ,>
<identifier , linenumber>
<separator , ,>
<identifier , attribute>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , tuple>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , static>
<keyword , char>
<identifier , tuple>
<separator , [>
<number , 50>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , tuple>
<separator , ,>
<string , "<%s , %s>\n">
<separator , ,>
<identifier , tag>
<separator , ,>
<identifier , attribute>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , return>
<identifier , tuple>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , int>
<identifier , SToI>
<separator , (>
<keyword , char>
<operator , *>
<identifier , token>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<keyword , return>
<identifier , atoi>
<separator , (>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , float>
<identifier , SToF>
<separator , (>
<keyword , char>
<operator , *>
<identifier , token>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<keyword , return>
<identifier , atof>
<separator , (>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , void>
<identifier , get_char>
<separator , (>
<identifier , FILE>
<operator , *>
<identifier , inputfile>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<identifier , C>
<operator , =>
<operator , *>
<identifier , forward>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "get_char: '%c'form %p\n">
<separator , ,>
<identifier , C>
<separator , ,>
<identifier , forward>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , forward>
<operator , =>
<identifier , changeforward>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , C>
<operator , ==>
<identifier , EOF>
<operator , &&>
<identifier , endofthefile>
<operator , ==>
<identifier , false>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , C>
<operator , =>
<operator , *>
<identifier , forward>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , forward>
<operator , =>
<identifier , changeforward>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , void>
<identifier , get_nbc>
<separator , (>
<identifier , FILE>
<operator , *>
<identifier , inputfile>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<keyword , while>
<separator , (>
<identifier , C>
<operator , ==>
<character , ' '>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , get_char>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<keyword , void>
<identifier , retract>
<separator , (>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , forward>
<operator , ==>
<operator , &>
<identifier , buffer2>
<separator , [>
<number , 0>
<separator , ]>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "forward retract to &buffer1[MAXLENGTH - 2] \n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , notreloadbuffer>
<operator , =>
<identifier , true>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , forward>
<operator , =>
<operator , &>
<identifier , buffer1>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 2>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , forward>
<operator , ==>
<operator , &>
<identifier , buffer1>
<separator , [>
<number , 0>
<separator , ]>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "forward retract to &buffer2[MAXLENGTH - 2] \n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , notreloadbuffer>
<operator , =>
<identifier , true>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , forward>
<operator , =>
<operator , &>
<identifier , buffer2>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 2>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , forward>
<operator , -->
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , void>
<identifier , cat>
<separator , (>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , token>
<operator , !=>
<string , "\0">
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , token>
<separator , ,>
<string , "%s%c">
<separator , ,>
<identifier , token>
<separator , ,>
<identifier , C>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , token>
<separator , [>
<number , 0>
<separator , ]>
<operator , =>
<character , '\0'>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , sprintf>
<separator , (>
<identifier , token>
<separator , ,>
<string , "%s%c">
<separator , ,>
<identifier , token>
<separator , ,>
<identifier , C>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "token = \"%s\" \n">
<separator , ,>
<identifier , token>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , char>
<operator , *>
<identifier , changeforward>
<separator , (>
<identifier , FILE>
<operator , *>
<identifier , inputfile>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<identifier , forward>
<operator , ++>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<operator , *>
<identifier , forward>
<operator , ==>
<identifier , EOF>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "*forward == EOF,forward = %p \n">
<separator , ,>
<identifier , forward>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , forward>
<operator , ==>
<operator , &>
<identifier , buffer1>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ]>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , notreloadbuffer>
<operator , ==>
<identifier , false>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , loadbuffer2>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , forward>
<operator , =>
<operator , &>
<identifier , buffer2>
<separator , [>
<number , 0>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "forward = &buffer2[0] \n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , notreloadbuffer>
<operator , ==>
<identifier , true>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , notreloadbuffer>
<operator , =>
<identifier , false>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<operator , *>
<identifier , forward>
<operator , ==>
<identifier , EOF>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , endofthefile>
<operator , =>
<identifier , true>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[1;31m">
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "End Of the File  \n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[0m">
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , forward>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<keyword , if>
<separator , (>
<identifier , forward>
<operator , ==>
<operator , &>
<identifier , buffer2>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ]>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , notreloadbuffer>
<operator , ==>
<identifier , false>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , loadbuffer1>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , forward>
<operator , =>
<operator , &>
<identifier , buffer1>
<separator , [>
<number , 0>
<separator , ]>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "forward = &buffer1[0] \n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , notreloadbuffer>
<operator , ==>
<identifier , true>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , notreloadbuffer>
<operator , =>
<identifier , false>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<operator , *>
<identifier , forward>
<operator , ==>
<identifier , EOF>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , endofthefile>
<operator , =>
<identifier , true>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[1;31m">
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "End Of the File  \n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[0m">
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , forward>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , endofthefile>
<operator , =>
<identifier , true>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[1;31m">
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "End Of the File  \n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[0m">
<separator , )>
<separator , ;>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , forward>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<keyword , else>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , return>
<identifier , forward>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<separator , 换行符>
<keyword , void>
<identifier , initbuffer>
<separator , (>
<identifier , FILE>
<operator , *>
<identifier , inputfile>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<identifier , loadbuffer1>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , }>
<separator , 换行符>
<keyword , void>
<identifier , loadbuffer1>
<separator , (>
<identifier , FILE>
<operator , *>
<identifier , inputfile>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , int>
<identifier , i>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , for>
<separator , (>
<identifier , i>
<operator , =>
<number , 0>
<separator , ;>
<identifier , i>
<operator , <>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ;>
<identifier , i>
<operator , ++>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , char>
<identifier , ch>
<operator , =>
<identifier , fgetc>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , ch>
<operator , ==>
<identifier , EOF>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , buffer1>
<separator , [>
<identifier , i>
<separator , ]>
<operator , =>
<identifier , EOF>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , buffer1>
<separator , [>
<identifier , i>
<separator , ]>
<operator , =>
<identifier , ch>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<identifier , buffer1>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ]>
<operator , =>
<identifier , EOF>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[1;34m">
<separator , )>
<separator , ;>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "/********** loadbuffer1 **********/\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "&buffer1[0] = %p \n">
<separator , ,>
<operator , &>
<identifier , buffer1>
<separator , [>
<number , 0>
<separator , ]>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "buffer1 = \"%s\" \n">
<separator , ,>
<identifier , buffer1>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , buffer1>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ]>
<operator , ==>
<identifier , EOF>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "buffer1[MAXLENGTH-1] == EOF \n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "&buffer1[MAXLENGTH-1] = %p \n">
<separator , ,>
<operator , &>
<identifier , buffer1>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ]>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "/*********************************/\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[0m">
<separator , )>
<separator , ;>
<separator , }>
<separator , 换行符>
<keyword , void>
<identifier , loadbuffer2>
<separator , (>
<identifier , FILE>
<operator , *>
<identifier , inputfile>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , int>
<identifier , i>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , for>
<separator , (>
<identifier , i>
<operator , =>
<number , 0>
<separator , ;>
<identifier , i>
<operator , <>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ;>
<identifier , i>
<operator , ++>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , char>
<identifier , ch>
<operator , =>
<identifier , fgetc>
<separator , (>
<identifier , inputfile>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , ch>
<operator , ==>
<identifier , EOF>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<identifier , buffer2>
<separator , [>
<identifier , i>
<separator , ]>
<operator , =>
<identifier , EOF>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , 制表符>
<keyword , break>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , buffer2>
<separator , [>
<identifier , i>
<separator , ]>
<operator , =>
<identifier , ch>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<identifier , buffer2>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ]>
<operator , =>
<identifier , EOF>
<separator , ;>
<separator , 换行符>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[1;32m">
<separator , )>
<separator , ;>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "/********** loadbuffer2**********/\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "&buffer2[0] = %p \n">
<separator , ,>
<operator , &>
<identifier , buffer2>
<separator , [>
<number , 0>
<separator , ]>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "buffer2 = \"%s\" \n">
<separator , ,>
<identifier , buffer2>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<keyword , if>
<separator , (>
<identifier , buffer2>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ]>
<operator , ==>
<identifier , EOF>
<separator , )>
<separator , {>
<separator , 换行符>
<separator , 制表符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "buffer2[MAXLENGTH-1] == EOF \n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<separator , }>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "&buffer2[MAXLENGTH-1] = %p \n">
<separator , ,>
<operator , &>
<identifier , buffer2>
<separator , [>
<identifier , MAXLENGTH>
<operator , ->
<number , 1>
<separator , ]>
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "/*********************************/\n">
<separator , )>
<separator , ;>
<separator , 换行符>
<separator , 制表符>
<identifier , printf>
<separator , (>
<string , "\033[0m">
<separator , )>
<separator , ;>
<separator , }>
/*********************************/
The number of the line: 961
The number of the identifier: 902
The number of the keyword: 425
The number of the number: 185
The number of the operator: 348
The number of the character: 91
The number of the string: 177
The number of the file: 2
The number of the separator: 5970
The number of the error: 0
The total number: 8100
/*********************************/
